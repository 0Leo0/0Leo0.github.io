<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[git学习之路_1_安装git以及创建版本库]]></title>
    <url>%2F%2F2018%2Fgit.html</url>
    <content type="text"><![CDATA[windows上安装Git下载git for windows，新手默认安装即可。 官方网址为：https://gitforwindows.org/ 安装完成之后，下一步就应该告诉git你来自哪里。因为Git是分布式版本控制系统，所以每个机器必须自报家门，即告诉git，你的名字和Email地址，命令为： git config --global user.name &quot;your name&quot; git config --global user.email &quot;your email&quot; 注意：(引号内请输入你自己设置的名字和自己的邮箱),此用户名和邮箱是git提交代码时用来显示你的身份和联系方式的，并不是github用户名和邮箱。其中--global参数表示你这台及其上所有的git仓库都会使用这个配置。 创建版本库首先这里再明确一下，所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。版本控制系统可以告诉你每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。 在Windows系统上，为了避免各种莫名其妙的问题，请确保目录名(不管是子目录还是父目录)不要包含中文。 之后使用命令git init来将这个目录变成Git可以管理的仓库。 Git仓库建好了，还是一个空的仓库，同时在该目录下会有一个隐藏的.git目录，这个目录是用来跟踪管理版本库的，没事千万别修改哦！ 把文件添加到版本库中 首先是文本编辑器的编码问题，强烈推荐使用UTF-8编码，而在Windows上不用使用Windows自带的记事本，可以选择notepad++，将默认编码改为：UTF-8 without BOM即可 让我们来新建一个readme.txt文件，输入下面的内容， 注意：这个文件一定要放在init的目录(或者子目录也行)下(否则git不能管理)，接着，把这个文件放到git仓库中只需要两步即可。 用git add告诉Git，把该文件添加到仓库中 add readme.txt``` 122. 用`git commit`告诉Git，把文件提交到仓库中 ```git commit -m &quot;wrote a readme file&quot; 上述命令的-m表示本次提交的说明(comment),可以输入任何内容，有意义最好，这样你就可以从历史记录里面方便地找到改动的记录。 在执行完git commit命令之后，就会告诉你，1 file changed:1个文件被改动(我们添加了readme.txt)；2 insertions：插入了两行内容(readme.txt有两行内容) 小贴士 为什么Git添加问价需要先add，再commit呢？因为commit命令可以一次提交很多文件(将add进去的文件都提交上去)，所以你可以多次add不同的文件。 比如： git add file1.txt file2.txt git commit -m &quot;add 2 files&quot; 参考来源Git 简介 Git cheat sheet英文版 Git cheat sheet中文版]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown语法学习]]></title>
    <url>%2F%2F2018%2FMarkdown%20grammar.html</url>
    <content type="text"><![CDATA[欢迎使用MarkdownPad编辑阅读器 粗体和斜体使用 一对* 或者 _ 表示包围的字体斜体显示而一对** 或者__ 来表示粗体。 例如： *你好，世界* **你好，世界** 显示效果为： 你好，世界 你好，世界 分级标题Markdown 的标题有Setext和Atx两种语法形式，在Setex中，在文本下面标注=表示最高级标题，在下面标注-表示第二级标题，比如下面的Setext形式输出一级标题和二级标题 Headline 1 ========== Headline 2 -- 当然也可以使用Atx形式输出各级标题 #Headline 1 ##Headline 2 段落Markdown中使用空白行来分割段落，比如下面两端文本，只需要在两端之间加上一行空行，Markdown就会为文本分段 Hello world 我是空白行 你好啊世界 显示效果为： Hello world 你好啊世界 字体Markdown支持HTML嵌套，我们可以利用HTML标记实现更改颜色的需求，更改颜色代码如下： Default Color &lt;font color=&apos;red&apos;&gt;Red Color&lt;/font&gt; &lt;font color=&apos;blue&apos;&gt;Blue Color&lt;/font&gt; &lt;font color=&apos;green&apos;&gt;Green Color&lt;/font&gt; &lt;font color=&apos;yellow&apos;&gt;Yellow Color&lt;/font&gt; &lt;font color=&apos;pink&apos;&gt;Pink Color&lt;/font&gt; &lt;font color=&apos;purple&apos;&gt;Purple Color&lt;/font&gt; &lt;font color=&apos;orange&apos;&gt;Orange Color&lt;/font&gt; 显示效果为： Red Color Blue Color Green Color Yellow Color Pink Color Purple Color Orange Color 更改字号、字体也可以使用HTML轻松实现 &lt;font size=&apos;-2&apos;&gt;Small Size&lt;/font&gt; Normal Size &lt;font size=&apos;+2&apos;&gt;Big Size&lt;/font&gt; &lt;font size=&apos;+2&apos; face=&apos;楷体&apos;&gt;楷体&lt;/font&gt; 输出显示为： Small Size Normal Size Big Size 楷体 引用Markdown使用email的区块引用方式，即右尖括号&gt;后面跟引用的内容，如下 &gt;Hello World &gt;你好，世界 其输出为： Hello World 你好，世界 列表Markdown中使用型号* , 加号+ 以及减号- 来表示无序列表(中间有空格) * 我是列表 + 我也是列表 - 我还是列表 其输出为： 我是列表 我也是列表 我还是列表 有序列表使用一个数字加一个英文句点作为项目标记，比如 1. 我是列表 2. 我也是列表 其输出如下： 我是列表 我也是列表 同时，列表也是可以进行嵌套使用的(中间不用空格)，比如： 1.你好，世界 &gt;你好，世界 2.Hello World &gt;Hello World 输出结果为： 1.你好，世界 你好，世界 2.Hello World Hello World 链接Markdown支持行内和参考两种形式的链接语法，两种都是使用中括号来把文字转成链接，行内形式是中括号包围文字，后面紧跟圆括号包围的链接，其代码如下所示： [我的博客](https://0leo0.github.io/) 其输出为： 我的博客 当然，我们也可以给我们的链接加上一个title属性， [我的博客](https://0leo0.github.io/ &quot;我是一个标题&quot;) 输出如下： 我的博客 参考形式的链接可以在原文中为链接定义一个名称，然后在文章的其他地方定义该链接的内容，其语法格式为 [链接文本][链接名称] 我想搜索关于Python的内容，可以去[Google][1],以及[Yahoo][2]和[Baidu][3] 然后在别的地方定义链接内容，语法格式为[链接名称]:空白符 URL &quot;title&quot; [1]: https://google.com/ &quot;Google&quot; [2]: https://yahoo.com/ &quot;Yahoo&quot; [3]: https://baidu.com/ &quot;Baidu&quot; 显示效果为： 我想搜索关于Python的内容，可以去Google,以及Yahoo和Baidu 另外，使用&lt;&gt; 包括的URL或者邮箱地址会被自动转换为超链接 &lt;https://0leo0.github.io/&gt; &lt;wen_9407@yahoo.com&gt; 效果如下： https://0leo0.github.io/ &#119;&#101;&#110;&#95;&#x39;&#x34;&#x30;&#x37;&#x40;&#121;&#97;&#104;&#x6f;&#x6f;&#x2e;&#99;&#x6f;&#x6d; 图片图片的语法格式和链接类似，也分为行内形式和参考形式。 行内形式语法格式为：![alt text](URL title),其中alt,text以及text都可以选择性的加入，但URL必须有 ![我要显示图片](https://imgchr.com/i/iy5Th9) 显示的效果如下： 参考形式分为两部分，声明图片链接名称和定义图片链接 其中声明图片链接语法格式为：![alt text][id] 定义图片链接内容的语法格式为： [id]:URL &quot;title&quot;. 代码在一般段落文字中，可以使用反引号`来标记代码区段。 我喜欢这个世界`&lt;blank&gt;`，哈哈 显示效果 我喜欢这个世界&lt;blank&gt;，哈哈 在Markdown中，如果行开头有4个空格，将被视为代码。但是这种方式，不推荐，我们推荐的方式是代码块的首行用3个反引号`和编程语言名称(C、Python等)标记代码块开始，代码块的结尾用3个反引号来闭合代码块。 比如，将一段python代码插入到Markdown，首行用3个反引号来标记代码块，最后一行再用3个反引号来闭合代码块。 12345678import argparseparser = argparse.ArgumentParser(description="calculate X to the power of Y")parser.add_argument('square',type=int,\ help="display a square of a given number")parser.add_argument('-v',"--verbosity",type=int,choices=[0,1,2],\ default=1,help="increase output verbosity")args = parser.parse_args()answer = args.square ** 2 那么其显示效果为： 1234567891011121314import argparseparser = argparse.ArgumentParser(description="calculate X to the power of Y")parser.add_argument('square',type=int,\ help="display a square of a given number")parser.add_argument('-v',"--verbosity",type=int,choices=[0,1,2],\ default=1,help="increase output verbosity")args = parser.parse_args()answer = args.square ** 2 其他考虑HTML和CSS(使用列表的话，下面的会显示出作用，而不是以代码的形式显示出来) 1.分割线和空行 /*分割线*/ &lt;hr /&gt; /*空行*/ &lt;br /&gt; 2.引用 &lt;blockquote&gt;引用内容&lt;/blockquote&gt; /*如果上下间距很小，可以加个P*/ &lt;p&gt;&lt;blockquote&gt;引用内容&lt;/blockquote&gt;&lt;/p&gt; 3.居中与右对齐 /*居中*/ &lt;center&gt;内容&lt;/center&gt; /*右对齐*/ &lt;p style=&quot;text-align:right&quot;&gt;内容&lt;/p&gt; 4.字体大小和颜色 &lt;font colr=&quot;#xxxxxx&quot; size=&quot;numbr&quot;&gt;内容&lt;/font&gt; //详细请查看W3schcool：https://www.w3school.com.cn/tags/tag_font.asp 5.Todo list &lt;ul&gt; &lt;li&gt;&lt;i class=&quot;fa fa-check-square&quot;&gt;&lt;/i&gt;已完成&lt;/li&gt; &lt;li&gt;&lt;i class=&quot;fa fasquare&quot;&gt;&lt;/i&gt;未完成&lt;/li&gt; &lt;/ul&gt; Markdown 高阶语法内容目录在段落中填写[TOC]以显示全文内容的目录结构 [TOC] 标签分类在编辑区任意行的的列首位置输入以下代码给文稿标签： 标签: 数学 英语 Markdown 或者 Tags: 数学 英语 Markdown 删除线使用~~ 表示删除线。 ~~ 这是一段错误的文本 ~~ 脚注使用[^keyword]表示脚注 这是一个脚注1的样例 LaTex公式$表示行内公式 质能守恒方程 $E=mc2 这里的上标我使用sup / sup，用四个尖括号括起来，同样下标为sub 而$$表示整行公式，具体参考MathJax 参考网址：Cmd Markdown简明语法手册 Markdown入门基础 fontawesome reuixiy 后话 第一篇markdown写的文章弄的我好辛苦，主要是用markdownpad编辑好的和hexo解析出的html不一样，在网页上看到的不是自己想要的，后面希望会好一点吧！！]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>
