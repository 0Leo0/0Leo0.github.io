<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lovelife</title>
  
  <subtitle>时光荏苒，岁月静好</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://0Leo0.github.io/"/>
  <updated>2018-10-27T16:09:05.161Z</updated>
  <id>https://0Leo0.github.io/</id>
  
  <author>
    <name>Leowen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>markdown语法学习</title>
    <link href="https://0Leo0.github.io//2018/Markdown%20grammar.html"/>
    <id>https://0Leo0.github.io//2018/Markdown grammar.html</id>
    <published>2018-10-26T11:17:57.000Z</published>
    <updated>2018-10-27T16:09:05.161Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p class="description"></p><a id="more"></a><h2 id="欢迎使用MarkdownPad编辑阅读器"><a href="#欢迎使用MarkdownPad编辑阅读器" class="headerlink" title="欢迎使用MarkdownPad编辑阅读器"></a>欢迎使用MarkdownPad编辑阅读器</h2><hr><h3 id="粗体和斜体"><a href="#粗体和斜体" class="headerlink" title="粗体和斜体"></a>粗体和斜体</h3><p>使用 一对<code>*</code> 或者 <code>_</code> 表示包围的字体斜体显示<br>而一对<code>**</code> 或者<code>__</code> 来表示粗体。</p><p>例如：</p><pre><code>*你好，世界***你好，世界**</code></pre><p>显示效果为：</p><p><em>你好，世界</em></p><p><strong>你好，世界</strong></p><h3 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h3><p>Markdown 的标题有Setext和Atx两种语法形式，在Setex中，在文本下面标注<code>=</code>表示最高级标题，在下面标注<code>-</code>表示第二级标题，比如下面的Setext形式输出一级标题和二级标题</p><pre><code>Headline 1==========Headline 2--</code></pre><p>当然也可以使用Atx形式输出各级标题</p><pre><code>#Headline 1 ##Headline 2</code></pre><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>Markdown中使用空白行来分割段落，比如下面两端文本，只需要在两端之间加上一行空行，Markdown就会为文本分段</p><pre><code>Hello world 我是空白行  你好啊世界</code></pre><p>显示效果为：</p><p>Hello world </p><p>你好啊世界</p><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>Markdown支持HTML嵌套，我们可以利用HTML标记实现更改颜色的需求，更改颜色代码如下：</p><pre><code>Default Color&lt;font color=&apos;red&apos;&gt;Red Color&lt;/font&gt;&lt;font color=&apos;blue&apos;&gt;Blue Color&lt;/font&gt;&lt;font color=&apos;green&apos;&gt;Green Color&lt;/font&gt;&lt;font color=&apos;yellow&apos;&gt;Yellow Color&lt;/font&gt;&lt;font color=&apos;pink&apos;&gt;Pink Color&lt;/font&gt;&lt;font color=&apos;purple&apos;&gt;Purple Color&lt;/font&gt;&lt;font color=&apos;orange&apos;&gt;Orange Color&lt;/font&gt;</code></pre><p>显示效果为：</p><font color="red">Red Color</font><font color="blue">Blue Color</font><font color="green">Green Color</font><font color="yellow">Yellow Color</font><font color="pink">Pink Color</font><font color="purple">Purple Color</font><font color="orange">Orange Color</font><p>更改字号、字体也可以使用HTML轻松实现</p><pre><code>&lt;font size=&apos;-2&apos;&gt;Small Size&lt;/font&gt;Normal Size&lt;font size=&apos;+2&apos;&gt;Big Size&lt;/font&gt;&lt;font size=&apos;+2&apos; face=&apos;楷体&apos;&gt;楷体&lt;/font&gt;</code></pre><p>输出显示为：</p><font size="-2">Small Size</font><p>Normal Size</p><font size="+2">Big Size</font><font size="+2" face="楷体">楷体</font><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>Markdown使用email的区块引用方式，即右尖括号<code>&gt;</code>后面跟引用的内容，如下</p><pre><code>&gt;Hello World&gt;你好，世界</code></pre><p>其输出为：</p><blockquote><p>Hello World </p></blockquote><blockquote><p>你好，世界</p></blockquote><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>Markdown中使用型号<code>*</code> , 加号<code>+</code> 以及减号<code>-</code> 来表示无序列表(中间有空格)</p><pre><code>* 我是列表+ 我也是列表- 我还是列表</code></pre><p>其输出为：</p><ul><li>我是列表</li></ul><ul><li>我也是列表</li></ul><ul><li>我还是列表</li></ul><p>有序列表使用一个数字加一个英文句点作为项目标记，比如</p><pre><code>1. 我是列表2. 我也是列表</code></pre><p>其输出如下：</p><ol><li><p>我是列表</p></li><li><p>我也是列表</p></li></ol><p>同时，列表也是可以进行嵌套使用的(中间不用空格)，比如：</p><pre><code>1.你好，世界&gt;你好，世界2.Hello World&gt;Hello World</code></pre><p>输出结果为：</p><p>1.你好，世界</p><blockquote><p>你好，世界</p></blockquote><p>2.Hello World</p><blockquote><p>Hello World</p></blockquote><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>Markdown支持行内和参考两种形式的链接语法，两种都是使用中括号来把文字转成链接，行内形式是中括号包围文字，后面紧跟圆括号包围的链接，其代码如下所示：</p><pre><code>[我的博客](https://0leo0.github.io/)</code></pre><p>其输出为：</p><p><a href="https://0leo0.github.io/">我的博客</a></p><p>当然，我们也可以给我们的链接加上一个title属性，</p><pre><code>[我的博客](https://0leo0.github.io/ &quot;我是一个标题&quot;)</code></pre><p>输出如下：</p><p><a href="https://0leo0.github.io/" title="我是一个标题">我的博客</a></p><p>参考形式的链接可以在原文中为链接定义一个名称，然后在文章的其他地方定义该链接的内容，其语法格式为 <code>[链接文本][链接名称]</code> </p><pre><code>我想搜索关于Python的内容，可以去[Google][1],以及[Yahoo][2]和[Baidu][3]</code></pre><p>然后在别的地方定义链接内容，语法格式为<code>[链接名称]:空白符 URL &quot;title&quot;</code></p><pre><code>[1]: https://google.com/ &quot;Google&quot;[2]: https://yahoo.com/ &quot;Yahoo&quot;[3]: https://baidu.com/ &quot;Baidu&quot;</code></pre><p>显示效果为：</p><p>我想搜索关于Python的内容，可以去<a href="https://google.com/" title="Google" target="_blank" rel="noopener">Google</a>,以及<a href="https://yahoo.com/" title="Yahoo" target="_blank" rel="noopener">Yahoo</a>和<a href="https://baidu.com/" title="Baidu" target="_blank" rel="noopener">Baidu</a></p><p>另外，使用<code>&lt;&gt;</code> 包括的URL或者邮箱地址会被自动转换为超链接</p><pre><code>&lt;https://0leo0.github.io/&gt;&lt;wen_9407@yahoo.com&gt;</code></pre><p>效果如下：</p><p><a href="https://0leo0.github.io/">https://0leo0.github.io/</a></p><p><a href="mailto:&#119;&#101;&#x6e;&#x5f;&#x39;&#x34;&#48;&#55;&#64;&#x79;&#x61;&#x68;&#x6f;&#111;&#46;&#x63;&#111;&#109;" target="_blank" rel="noopener">&#119;&#101;&#x6e;&#x5f;&#x39;&#x34;&#48;&#55;&#64;&#x79;&#x61;&#x68;&#x6f;&#111;&#46;&#x63;&#111;&#109;</a></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>图片的语法格式和链接类似，也分为行内形式和参考形式。</p><p>行内形式语法格式为：<code>![alt text](URL title)</code>,其中alt,text以及text都可以选择性的加入，但URL必须有</p><pre><code>![我要显示图片](https://imgchr.com/i/iy5Th9)</code></pre><p>显示的效果如下：</p><p><img src="https://s1.ax1x.com/2018/10/26/iy5Th9.jpg" alt="我要显示图片" title="海贼王"></p><p>参考形式分为两部分，声明图片链接名称和定义图片链接</p><p>其中声明图片链接语法格式为：<code>![alt text][id]</code></p><p>定义图片链接内容的语法格式为： <code>[id]:URL &quot;title&quot;</code>.</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>在一般段落文字中，可以使用反引号`来标记代码区段。</p><pre><code>我喜欢这个世界`&lt;blank&gt;`，哈哈</code></pre><p>显示效果</p><p>我喜欢这个世界<code>&lt;blank&gt;</code>，哈哈</p><p>在Markdown中，如果行开头有4个空格，将被视为代码。但是这种方式，不推荐，我们推荐的方式是代码块的首行用3个反引号<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">比如，将一段python代码插入到Markdown，首行用```Python标记代码块，最后一行再用3个反引号来闭合代码块。</span><br><span class="line"></span><br><span class="line">    ```python</span><br><span class="line">    import argparse</span><br><span class="line">    parser = argparse.ArgumentParser(description=&quot;calculate X to the power of Y&quot;)</span><br><span class="line">    parser.add_argument(&apos;square&apos;,type=int,\</span><br><span class="line">            help=&quot;display a square of a given number&quot;)</span><br><span class="line">    parser.add_argument(&apos;-v&apos;,&quot;--verbosity&quot;,type=int,choices=[0,1,2],\</span><br><span class="line">            default=1,help=&quot;increase output verbosity&quot;)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    answer = args.square ** 2</span><br></pre></td></tr></table></figure></p><p>那么其显示效果为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser(description=<span class="string">"calculate X to the power of Y"</span>)</span><br><span class="line"></span><br><span class="line">parser.add_argument(<span class="string">'square'</span>,type=int,\</span><br><span class="line">        help=<span class="string">"display a square of a given number"</span>)</span><br><span class="line"></span><br><span class="line">parser.add_argument(<span class="string">'-v'</span>,<span class="string">"--verbosity"</span>,type=int,choices=[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>],\</span><br><span class="line">        default=<span class="number">1</span>,help=<span class="string">"increase output verbosity"</span>)</span><br><span class="line"></span><br><span class="line">args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">answer = args.square ** <span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>考虑HTML和CSS<br>(使用列表的话，下面的会显示出作用，而不是以代码的形式显示出来)</p><p>1.分割线和空行</p><pre><code>/*分割线*/&lt;hr /&gt;/*空行*/&lt;br /&gt;</code></pre><p>2.引用</p><pre><code>&lt;blockquote&gt;引用内容&lt;/blockquote&gt;/*如果上下间距很小，可以加个P*/&lt;p&gt;&lt;blockquote&gt;引用内容&lt;/blockquote&gt;&lt;/p&gt;</code></pre><p>3.居中与右对齐</p><pre><code>/*居中*/&lt;center&gt;内容&lt;/center&gt;/*右对齐*/&lt;p style=&quot;text-align:right&quot;&gt;内容&lt;/p&gt;</code></pre><p>4.字体大小和颜色</p><pre><code>&lt;font colr=&quot;#xxxxxx&quot; size=&quot;numbr&quot;&gt;内容&lt;/font&gt;//详细请查看W3schcool：https://www.w3school.com.cn/tags/tag_font.asp</code></pre><p>5.Todo list</p><pre><code>&lt;ul&gt;&lt;li&gt;&lt;i class=&quot;fa fa-check-square&quot;&gt;&lt;/i&gt;已完成&lt;/li&gt;&lt;li&gt;&lt;i class=&quot;fa fasquare&quot;&gt;&lt;/i&gt;未完成&lt;/li&gt;&lt;/ul&gt;</code></pre><h2 id="Markdown-高阶语法"><a href="#Markdown-高阶语法" class="headerlink" title="Markdown 高阶语法"></a>Markdown 高阶语法</h2><h3 id="内容目录"><a href="#内容目录" class="headerlink" title="内容目录"></a>内容目录</h3><p>在段落中填写[TOC]以显示全文内容的目录结构</p><p>[TOC]</p><h3 id="标签分类"><a href="#标签分类" class="headerlink" title="标签分类"></a>标签分类</h3><p>在编辑区任意行的的列首位置输入以下代码给文稿标签： </p><p>标签: 数学 英语 Markdown</p><p>或者</p><p>Tags: 数学 英语 Markdown</p><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>使用~~ 表示删除线。</p><p>~~ 这是一段错误的文本 ~~</p><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>使用[^keyword]表示脚注</p><p>这是一个脚注<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>的样例</p><h3 id="LaTex公式"><a href="#LaTex公式" class="headerlink" title="LaTex公式"></a>LaTex公式</h3><p>$表示行内公式</p><p>质能守恒方程 $E=mc<sup>2</sup></p><p>这里的上标我使用sup / sup，用四个尖括号括起来，同样下标为sub</p><p>而$$表示整行公式，具体参考<a href="https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax</a></p><hr><h3 id="参考网址："><a href="#参考网址：" class="headerlink" title="参考网址："></a>参考网址：</h3><p><a href="https://www.zybuluo.com/static/editor/cmd-manual.html" target="_blank" rel="noopener">Cmd Markdown简明语法手册</a></p><p><a href="https://www.cnblogs.com/dezheng/p/3834813.html" target="_blank" rel="noopener">Markdown入门基础</a></p><p><a href="https://fontawesome.com/v4.7.0/examples/" target="_blank" rel="noopener">fontawesome</a></p><p><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">reuixiy</a></p><p><span id="inline-blue">后话</span></p><p>第一篇markdown写的文章弄的我好辛苦，主要是用markdownpad编辑好的和hexo解析出的html不一样，在网页上看到的不是自己想要的，后面希望会好一点吧！！</p><hr>]]></content>
    
    <summary type="html">
    
      什么？你竟然还不会用markdown？
    
    </summary>
    
      <category term="markdown" scheme="https://0Leo0.github.io/categories/markdown/"/>
    
    
      <category term="markdown" scheme="https://0Leo0.github.io/tags/markdown/"/>
    
  </entry>
  
</feed>
